name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Backend (Go)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run go fmt
        run: |
          output=$(gofmt -l .)
          if [ -n "$output" ]; then
            echo "Code is not formatted:"
            echo "$output"
            exit 1
          fi

      - name: Run go vet
        run: go vet ./...

      - name: Run go test with coverage (sub-packages only)
        run: |
          packages=$(go list ./... | grep -v '^github.com/jesee-kuya/blue$')
          go test -coverprofile=coverage.out -covermode=atomic $packages



      - name: Check backend coverage threshold
        run: |
          coverage=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          echo "Backend coverage: $coverage%"
          threshold=80.0
          result=$(echo "$coverage >= $threshold" | bc -l)
          if [ "$result" -ne 1 ]; then
            echo "Coverage $coverage% is below threshold ($threshold%)"
            exit 1
          fi

      - name: Upload backend coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: coverage.out

  frontend:
    name: Frontend (React)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Lint frontend
        run: npm run lint

      - name: Run frontend tests with coverage
        run: |
          npm test -- --coverage --coverageReporters=json --watchAll=false

      - name: Check frontend coverage threshold
        run: |
          if [ ! -f coverage/coverage-summary.json ]; then
            echo "❌ coverage-summary.json not found. Test may have failed or coverage report was not generated."
            exit 1
          fi
          coverage=$(node -pe "require('./coverage/coverage-summary.json').total.statements.pct")
          echo "Frontend coverage: $coverage%"
          threshold=70.0
          result=$(echo "$coverage >= $threshold" | bc -l)
          if [ "$result" -ne 1 ]; then
            echo "Coverage $coverage% is below threshold ($threshold%)"
            exit 1
          fi


      - name: Upload frontend coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage
